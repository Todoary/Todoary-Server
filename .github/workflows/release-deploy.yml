# This is a basic workflow to help you get started with Actions

name: release-deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "Develop" branch
  push:
    branches: [ "Release" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.TOKEN }}
          submodules: true

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin' # https://github.com/actions/setup-java

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew clean build -x test --info
        shell: bash

      - name: Test with Gradle
        run: ./gradlew test

      - name: zip 파일 생성
        run: |
          mkdir -p before-deploy
          cp service-scripts/*.sh before-deploy/
          cp appspec.yml before-deploy/
          cp $(ls -tr build/libs/*.jar | tail -n 1) before-deploy/
          cd before-deploy && zip -r before-deploy *
          cd ../ && mkdir -p deploy
          mv before-deploy/before-deploy.zip deploy/todoary-service$GITHUB_SHA.zip
        shell: bash

      - name: AWS 자격 증명
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: S3 로드
        run: |
          aws s3 cp \
          --region ap-northeast-2 \
          ./deploy/todoary-service$GITHUB_SHA.zip s3://todoary-service-s3/artifacts/todoary-service$GITHUB_SHA.zip

      - name: CodeDeploy 배포
        run: |
          aws deploy create-deployment \
          --application-name todoary-service \
          --deployment-group-name todoary-service-group \
          --s3-location bucket=todoary-service-s3,bundleType=zip,key=artifacts/todoary-service$GITHUB_SHA.zip
